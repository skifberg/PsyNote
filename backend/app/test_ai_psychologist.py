import asyncio
import sys
sys.path.append('/Users/oleg/PsyNote/backend/app')

from core.ai_psychologist import ai_psychologist

async def test_ai_psychologist():
    print("üß† –¢–µ—Å—Ç–∏—Ä—É–µ–º AI-–ø—Å–∏—Ö–æ–ª–æ–≥–∞...")
    
    # –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    test_data = {
        "name": "–¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (BAI)",
        "score": 25,
        "max_score": 63,
        "interpretation": "–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏"
    }
    
    try:
        analysis = await ai_psychologist.analyze_test_results(test_data)
        print("‚úÖ AI-–∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        print(analysis)
        print("\n" + "="*50 + "\n")
        
        # –¢–µ—Å—Ç –ø–æ–¥–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∏–∫
        methods = await ai_psychologist.suggest_methods("–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞ –∏ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ")
        print("‚úÖ AI-–ø–æ–¥–±–æ—Ä –º–µ—Ç–æ–¥–∏–∫:")
        print(methods)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_ai_psychologist())
    if success:
        print("\nüéâ AI-–ø—Å–∏—Ö–æ–ª–æ–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
    else:
        print("\nüîß –ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")