import asyncio
import sys
sys.path.append('/Users/oleg/PsyNote/backend/app')

from core.ai_psychologist import ai_psychologist
from services.ai_service import ai_service

async def test_full_integration():
    print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é AI...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "id": 1,
        "name": "–¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (BAI)",
        "score": 25,
        "max_score": 63,
        "interpretation": "–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏"
    }
    
    user_id = 123  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    
    try:
        # –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –∞–Ω–∞–ª–∏–∑ + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        result = await ai_service.analyze_and_save_test(user_id, test_data)
        
        if result["success"]:
            print("‚úÖ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üìä –ê–Ω–∞–ª–∏–∑: {result['analysis'][:200]}...")
            print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
            
        return result["success"]
        
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

async def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã...")
    
    # –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ—Å—Ç–∞
    test_data = {
        "name": "–¢–µ—Å—Ç –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –ë–µ–∫–∞",
        "score": 18,
        "max_score": 63,
        "interpretation": "–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è"
    }
    
    try:
        analysis = await ai_psychologist.analyze_test_results(test_data)
        print("‚úÖ API –∞–Ω–∞–ª–∏–∑ —Ç–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        methods = await ai_psychologist.suggest_methods("–ø–æ—Ç–µ—Ä—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –∂–∏–∑–Ω–∏")
        print("‚úÖ API –ø–æ–¥–±–æ—Ä –º–µ—Ç–æ–¥–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå API –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AI...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    results = asyncio.run(asyncio.gather(
        test_full_integration(),
        test_api_endpoints()
    ))
    
    if all(results):
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! AI –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")