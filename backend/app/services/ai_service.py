import json
from typing import Dict, List
from datetime import datetime
from core.ai_psychologist import ai_psychologist

class AIService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    async def save_ai_analysis(self, user_id: int, test_id: int, analysis_data: Dict):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç AI-–∞–Ω–∞–ª–∏–∑ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –≤–∞—à—É –ë–î
        analysis_record = {
            "user_id": user_id,
            "test_id": test_id,
            "analysis": analysis_data,
            "created_at": datetime.now().isoformat(),
            "ai_model": "yandex-gpt"
        }
        
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≤–∞—à—É –ë–î
        print(f"üíæ Saving AI analysis for user {user_id}, test {test_id}")
        return analysis_record
    
    async def get_user_ai_history(self, user_id: int) -> List[Dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é AI-–∞–Ω–∞–ª–∏–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –≤–∞—à–µ–π –ë–î
        return []
    
    async def analyze_and_save_test(self, user_id: int, test_data: Dict) -> Dict:
        """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –∞–Ω–∞–ª–∏–∑ + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ"""
        try:
            # AI-–∞–Ω–∞–ª–∏–∑
            analysis = await ai_psychologist.analyze_test_results(test_data)
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
            saved_analysis = await self.save_ai_analysis(
                user_id=user_id,
                test_id=test_data.get("id"),
                analysis_data={
                    "text": analysis,
                    "test_data": test_data
                }
            )
            
            return {
                "success": True,
                "analysis": analysis,
                "saved_record": saved_analysis
            }
            
        except Exception as e:
            return {
                "success": False,
                "error": str(e)
            }

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
ai_service = AIService()