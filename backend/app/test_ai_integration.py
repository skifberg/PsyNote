import asyncio
import sys
sys.path.append('/Users/oleg/PsyNote/backend/app')

from core.ai_psychologist import ai_psychologist

async def test_ai_functionality():
    print("üß† –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª AI...")
    
    # –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    test_data = {
        "name": "–¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (BAI)",
        "score": 25,
        "max_score": 63,
        "interpretation": "–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏"
    }
    
    try:
        analysis = await ai_psychologist.analyze_test_results(test_data)
        print("‚úÖ AI-–∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {analysis[:200]}...")
        
        # –¢–µ—Å—Ç –ø–æ–¥–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∏–∫
        methods = await ai_psychologist.suggest_methods("–ø–æ—Ç–µ—Ä—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –∂–∏–∑–Ω–∏")
        print("‚úÖ AI-–ø–æ–¥–±–æ—Ä –º–µ—Ç–æ–¥–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìã –ú–µ—Ç–æ–¥–∏–∫–∏: {methods[:200]}...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞...")
    success = asyncio.run(test_ai_functionality())
    
    if success:
        print("\nüéâ AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")